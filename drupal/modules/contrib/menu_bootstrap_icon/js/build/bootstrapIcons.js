!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.bootstrapIcons=n())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapicon-view.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BootstrapIconView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n\n\n/**\n * A class rendering the information required from user input.\n *\n * @extends module:ui/view~View\n *\n * @internal\n */\nclass BootstrapIconView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\n\n  /**\n   * @inheritdoc\n   */\n  constructor(editor) {\n    const locale = editor.locale;\n    super(locale);\n\n    this.searchInputView = this._createInput('Search icon (ie. chevron-down)');\n\n    // Icons list.\n    const config = editor.config.get('bootstrapicons');\n    let iconsBootstrap = config.search_list;\n    let cdn = config.cdn;\n    if (cdn.length) {\n      let link = document.createElement(\"link\");\n      link.rel = \"stylesheet\";\n      link.type = \"text/css\";\n      link.href = cdn;\n      document.head.appendChild(link);\n    }\n    this.iconsBootstrap = this._createListIcons(iconsBootstrap);\n    const elements = this.iconsBootstrap.items._items;\n    this.searchInputView.fieldView.on('input', (event)=>{\n      let search = event.source.element.value.toLowerCase().replace(/[_\\-+]/g, ' ');\n      sessionStorage.setItem('bootstrapIconSearch', search);\n      elements.forEach(item => {\n        const indexOfSearch = item.element.textContent.indexOf(search);\n        item.element.style.display = indexOfSearch !== -1 ? 'block' : 'none';\n      });\n    });\n\n    // Create the save and cancel buttons.\n    this.saveButtonView = this._createButton(\n      'Save', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.check, 'ck-button-save'\n    );\n    this.saveButtonView.type = 'submit';\n\n    this.cancelButtonView = this._createButton(\n      'Cancel', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.cancel, 'ck-button-cancel'\n    );\n    // Delegate ButtonView#execute to FormView#cancel.\n    this.cancelButtonView.delegate('execute').to(this, 'cancel');\n\n    this.childViews = this.createCollection([\n      this.searchInputView,\n      this.iconsBootstrap,\n      this.saveButtonView,\n      this.cancelButtonView\n    ]);\n\n    this.setTemplate({\n      tag: 'form',\n      attributes: {\n        class: ['ck', 'ck-bootstrapicon-form', 'ck-responsive-form'],\n        tabindex: '-1'\n      },\n      children: this.childViews\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  render() {\n    super.render();\n\n    // Submit the form when the user clicked the save button or\n    // pressed enter the input.\n    (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.submitHandler)({\n      view: this\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  focus() {\n    this.childViews.first.focus();\n  }\n\n  // Create a generic input field.\n  _createInput(label) {\n    const labeledInput = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.LabeledFieldView(this.locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createLabeledInputText);\n    labeledInput.label = label;\n    let search = sessionStorage.getItem('bootstrapIconSearch');\n    if (search) {\n      labeledInput.fieldView.bind('value').to(this, value => search);\n    }\n    return labeledInput;\n  }\n\n  // Create a generic button.\n  _createButton(label, icon, className) {\n    const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n\n    button.set({\n      label,\n      icon,\n      tooltip: true,\n      class: className\n    });\n\n    return button;\n  }\n\n  _createIconBtn(className, search) {\n    const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n    button.set({\n      label: search,\n      tooltip: search,\n      class: 'bootstrapicon bi bi-' + className\n    });\n\n    button.on( 'execute', () => {\n      this.searchInputView.fieldView.element.value = className;\n      this.searchInputView.fieldView.element.focus();\n    } );\n\n    const liView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ListItemView();\n    liView.children.add(button)\n    return liView;\n  }\n\n  _createListIcons(icons){\n    const list = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ListView();\n    icons.forEach((element) => {\n      let search = Array.isArray(element.searchTerms) ? element.searchTerms : Object.values(element.searchTerms);\n      let icon = this._createIconBtn(\n        element.title, search.join(' ')\n      );\n      list.items.add(icon);\n    });\n    return list;\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapicon-view.js?")},"./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapicons.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ BootstrapIcons)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _bootstrapiconsui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bootstrapiconsui */ "./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapiconsui.js");\n/* harmony import */ var _bootstrapiconsediting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bootstrapiconsediting */ "./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapiconsediting.js");\n/**\n * @file The build process always expects an index.js file. Anything exported\n * here will be recognized by CKEditor 5 as an available plugin. Multiple\n * plugins can be exported in this one file.\n *\n * I.e. this file\'s purpose is to make plugin(s) discoverable.\n */\n// cSpell:ignore bootstrapicons\n\n\n\n\n\nclass BootstrapIcons extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [_bootstrapiconsediting__WEBPACK_IMPORTED_MODULE_2__["default"], _bootstrapiconsui__WEBPACK_IMPORTED_MODULE_1__["default"]];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return \'BootstrapIcons\';\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapicons.js?')},"./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapiconsediting.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BootstrapIconsEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* harmony import */ var _inserticoncommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inserticoncommand */ \"./js/ckeditor5_plugins/bootstrapIcons/src/inserticoncommand.js\");\n\n\n\n\n// cSpell:ignore bootstrapicons inserticoncommand\n\n/**\n * CKEditor 5 plugins do not work directly with the DOM. They are defined as\n * plugin-specific data models that are then converted to markup that\n * is inserted in the DOM.\n *\n * CKEditor 5 internally interacts with simpleBox as this model:\n * <simpleBox>\n *    <simpleBoxTitle></simpleBoxTitle>\n *    <simpleBoxDescription></simpleBoxDescription>\n * </simpleBox>\n *\n * Which is converted for the browser/user as this markup\n * <section class=\"simple-box\">\n *   <h2 class=\"simple-box-title\"></h1>\n *   <div class=\"simple-box-description\"></div>\n * </section>\n *\n * This file has the logic for defining the simpleBox model, and for how it is\n * converted to standard DOM markup.\n */\nclass BootstrapIconsEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  static get requires() {\n    return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.Widget];\n  }\n\n  init() {\n    this._defineSchema();\n    this._defineConverters();\n    this._defineCommands();\n  }\n\n  _defineSchema() {\n    // Schemas are registered via the central `editor` object.\n    const schema = this.editor.model.schema;\n\n    schema.register('bootstrapIcons', {\n      // Behaves like a self-contained object (e.g. an image).\n      isObject: true,\n      // Allow in places where other blocks are allowed (e.g. directly in the root).\n      allowWhere: '$text',\n      isInline: true,\n      allowAttributes: ['class'],\n    });\n  }\n\n  /**\n   * Converters determine how CKEditor 5 models are converted into markup and\n   * vice-versa.\n   */\n  _defineConverters() {\n    // Converters are registered via the central editor object.\n    const { conversion } = this.editor;\n    // Allow class attribute.\n    conversion.attributeToAttribute({model: 'class', view: 'class'});\n    conversion.for('downcast').elementToElement({\n      model: 'bootstrapIcons',\n      view: 'i'\n    });\n\n    conversion.for('upcast').elementToElement({\n      model: 'bootstrapIcons',\n      view: {\n        name: 'i',\n        classes: 'bootstrap-icon',\n      },\n    });\n  }\n\n  _defineCommands() {\n    const editor = this.editor;\n    editor.commands.add(\n      'InsertIconCommand',\n      new _inserticoncommand__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.editor),\n    );\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapiconsediting.js?")},"./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapiconsui.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BootstrapIconsUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _bootstrapicon_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bootstrapicon-view */ \"./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapicon-view.js\");\n/* harmony import */ var _icons_bootstrap_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../icons/bootstrap.svg */ \"./icons/bootstrap.svg\");\n/**\n * @file registers the bootstrapIcons toolbar button and binds functionality to it.\n */\n\n\n\n\n\n\nclass BootstrapIconsUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  init() {\n    const editor = this.editor;\n    this._balloon = this.editor.plugins.get(ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon);\n    this.formView = this._createFormView();\n\n    // This will register the bootstrapIcons toolbar button.\n    editor.ui.componentFactory.add('bootstrapIcons', (locale) => {\n      const command = editor.commands.get('InsertIconCommand');\n      const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n\n      // Create the toolbar button.\n      buttonView.set({\n        label: editor.t('Bootstrap icons'),\n        icon: _icons_bootstrap_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        tooltip: true,\n      });\n\n      // Bind the state of the button to the command.\n      buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n\n      // Execute the command when the button is clicked (executed).\n      this.listenTo(buttonView, 'execute', () => {\n        this._showUI();\n      });\n\n      return buttonView;\n    });\n\n  }\n\n  _createFormView() {\n    const editor = this.editor;\n    const formView = new _bootstrapicon_view__WEBPACK_IMPORTED_MODULE_2__[\"default\"](editor);\n\n    // On btn icon click send class to the writer, then hide the form view.\n    this.listenTo(formView, 'bootstrapicon', () => {\n      let addClass = {\n        icon: formView.searchInputView.fieldView.element.value,\n      };\n      editor.execute('InsertIconCommand', addClass);\n      this._hideUI();\n    });\n\n    // On submit send the user data to the writer, then hide the form view.\n    this.listenTo(formView, 'submit', () => {\n      let addClass = {\n        icon: formView.searchInputView.fieldView.element.value,\n      };\n      editor.execute('InsertIconCommand', addClass);\n      this._hideUI();\n    });\n\n    // Hide the form view after clicking the \"Cancel\" button.\n    this.listenTo(formView, 'cancel', () => {\n      this._hideUI();\n    });\n\n    // Hide the form view when clicking outside the balloon.\n    (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.clickOutsideHandler)({\n      emitter: formView,\n      activator: () => this._balloon.visibleView === formView,\n      contextElements: [this._balloon.view.element],\n      callback: () => this._hideUI()\n    });\n\n    return formView;\n  }\n\n  _hideUI() {\n    this.formView.searchInputView.fieldView.value = '';\n    this.formView.element.reset();\n    this._balloon.remove(this.formView);\n\n    // Focus the editing view after closing the form view.\n    this.editor.editing.view.focus();\n  }\n\n  _showUI() {\n    let search = sessionStorage.getItem('bootstrapIconSearch');\n    this.formView.searchInputView.fieldView.value = search;\n    this._balloon.add({\n      view: this.formView,\n      position: this._getBalloonPositionData(),\n      icon: 'testIcon'\n    });\n    this.formView.focus();\n  }\n\n  _getBalloonPositionData() {\n    const view = this.editor.editing.view;\n    const viewDocument = view.document;\n    let target = null;\n\n    // Set a target position by converting view selection range to DOM.\n    target = () => view.domConverter.viewRangeToDom(\n      viewDocument.selection.getFirstRange()\n    );\n    return {target};\n  }\n\n}\n\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapiconsui.js?")},"./js/ckeditor5_plugins/bootstrapIcons/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _bootstrapicons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bootstrapicons */ "./js/ckeditor5_plugins/bootstrapIcons/src/bootstrapicons.js");\n/**\n * @module bootstrap-icons\n */\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  BootstrapIcons: _bootstrapicons__WEBPACK_IMPORTED_MODULE_0__["default"],\n});\n\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./js/ckeditor5_plugins/bootstrapIcons/src/index.js?')},"./js/ckeditor5_plugins/bootstrapIcons/src/inserticoncommand.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InsertIconCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/**\n * @file defines InsertBootstrapIconsCommand, which is executed when the icon\n * toolbar button is pressed.\n */\n// cSpell:ignore bootstrapicons\n\n\n\nclass InsertIconCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute(addClass) {\n    const { model } = this.editor;\n    model.change((writer) => {\n      let classes = 'bi';\n      if (addClass.icon !== '') {\n        classes += ' bi-' + addClass.icon;\n      }\n      const attributes = {\n        class: classes,\n      };\n      const content = writer.createElement('bootstrapIcons', attributes);\n      const docFrag = writer.createDocumentFragment();\n      writer.append(content, docFrag);\n      writer.insertText(drupalSettings.icon, content);\n      this.editor.model.insertContent(docFrag);\n    });\n  }\n\n  refresh() {\n    const { model } = this.editor;\n    const { selection } = model.document;\n    const allowedIn = model.schema.findAllowedParent(\n      selection.getFirstPosition(),\n      'bootstrapIcons',\n    );\n    this.isEnabled = allowedIn !== null;\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./js/ckeditor5_plugins/bootstrapIcons/src/inserticoncommand.js?")},"./icons/bootstrap.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\x3c!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --\x3e\\n<svg width=\\"800px\\" height=\\"800px\\" viewBox=\\"0 0 16 16\\" xmlns=\\"http://www.w3.org/2000/svg\\" fill=\\"#000000\\" class=\\"bi bi-bootstrap\\">\\n  <path d=\\"M5.062 12h3.475c1.804 0 2.888-.908 2.888-2.396 0-1.102-.761-1.916-1.904-2.034v-.1c.832-.14 1.482-.93 1.482-1.816 0-1.3-.955-2.11-2.542-2.11H5.062V12zm1.313-4.875V4.658h1.78c.973 0 1.542.457 1.542 1.237 0 .802-.604 1.23-1.764 1.23H6.375zm0 3.762V8.162h1.822c1.236 0 1.887.463 1.887 1.348 0 .896-.627 1.377-1.811 1.377H6.375z\\"/>\\n  <path d=\\"M0 4a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4zm4-3a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h8a3 3 0 0 0 3-3V4a3 3 0 0 0-3-3H4z\\"/>\\n</svg>");\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/./icons/bootstrap.svg?')},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.bootstrapIcons/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/bootstrapIcons/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));